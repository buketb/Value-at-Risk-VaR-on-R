#Value at Risk
################'
install.packages("quantmod")
install.packages("PerformanceAnalytics")
install.packages("ggfortify")
install.packages("ggplot2")


#################################

library(quantmod)
library(PerformanceAnalytics)
library(ggfortify)
library(ggplot2)

MSFT <- Ad(getSymbols("MSFT", auto.assign = F))
#Ad stands for adjust
MSFT.Rend <- na.omit(ROC(MSFT, type = "discrete"))
#ROC calculates the rate of change the series

plot(MSFT.Rend)
plot(MSFT)

#Value at Risk calculations: 
VaR(MSFT.Rend, p = 0.99, method = "historical")
VaR(MSFT.Rend, p = 0.99, method = "gaussian")
VaR(MSFT.Rend, p = 0.99, method = "modified")

#my VaR function under the assumption of normal distribution of the return series
#VaR = [ER â€“ (Z*STD)] * P (portfolio value)
myVaR <- function(Rend,alpha,P){
  sigma = sd(Rend)
  mu= mean(Rend)
  var= -(mu+ qnorm(alpha)*sigma)*P
  return(var)  
}

#plotting the density
ours <- autoplot(density(MSFT.Rend), fill = 'green')

#sd of the returns
sd(MSFT.Rend)
#[1] 0.01769151

#one visualisation:
par(mfrow=c(2,1))
plot(density(MSFT.Rend), xlim= c(-0.07, 0.07))
set.seed(123)
x <- rnorm(3757,0,0.0176)
plot(density(x))


#Compare myVaR & Gaussian wriiten functions:
myVaR(MSFT.Rend,0.99,1)

myVaR(MSFT.Rend,0.99,1)
